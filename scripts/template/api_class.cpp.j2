#include "{{ file_name_lower }}.h"
#include "atprotocol/lexicons_func.h"

#include <QJsonDocument>
#include <QJsonObject>
{%- if access_type == "get" %}
#include <QUrlQuery>
{%- endif %}

namespace AtProtocolInterface {

{{ class_name }}::{{ class_name }}(QObject *parent)
    : AccessAtProtocol { parent }
{
}

void {{ class_name }}::{{ method_name }}({{ method_args }})
{
{%- if access_type == "get" %}
    QUrlQuery query;
{{ method_query }}

    get(QStringLiteral("xrpc/{{ api_id }}"), query);
{% else %}
    post(QStringLiteral("xrpc/{{ api_id }}"), QByteArray(), true);
{% endif -%}
}

const AtProtocolType::{{ variable_type }} &{{ class_name }}::{{ method_getter }}() const
{
    return {{ variable_name }};
}

bool {{ class_name }}::parseJson(bool success, const QString reply_json)
{
    QJsonDocument json_doc = QJsonDocument::fromJson(reply_json.toUtf8());
    if (json_doc.isEmpty()) {
        success = false;
    } else {
        //setCursor(json_doc.object().value("cursor").toString());
        AtProtocolType::{{ copy_method }}(json_doc.object(), {{ variable_name }});
    }

    return success;
}

}
