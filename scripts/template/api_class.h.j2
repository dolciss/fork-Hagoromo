#ifndef {{ file_name_upper }}_H
#define {{ file_name_upper }}_H

#include "atprotocol/accessatprotocol.h"
#include "atprotocol/lexicons.h"

namespace AtProtocolInterface {

class {{ class_name }} : public AccessAtProtocol
{
public:
    explicit {{ class_name }}(QObject *parent = nullptr);

    void {{ method_name }}({{ method_args }});

{% for member in members -%}
    {% if member.variable_is_array %}
        const QList<{{ member.variable_type }}> *{{ member.method_getter }}() const;
    {% else %}
        const {{ member.variable_type }} &{{ member.method_getter }}() const;
    {% endif %}
{% endfor -%}
private:
    virtual bool parseJson(bool success, const QString reply_json);

{% for member in members -%}
    {% if member.variable_is_array %}
    QList<{{ member.variable_type }}> {{ member.variable_name }};
    {% else %}
    {{ member.variable_type }} {{ member.variable_name }};
    {% endif %}
{% endfor -%}
};

}

#endif // {{ file_name_upper }}_H
